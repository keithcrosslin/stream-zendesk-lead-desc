{"ast":null,"code":"var _jsxFileName = \"/Users/tararice/github_local/stream-zendesk-lead-transcript/frontend-customer/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Chat, Channel, Window, TypingIndicator, MessageList, MessageCommerce, MessageInput, MessageInputFlat, withChannelContext } from \"stream-chat-react\";\nimport { StreamChat } from \"stream-chat\";\nimport axios from \"axios\";\nimport \"stream-chat-react/dist/css/index.css\";\nlet chatClient;\n\nfunction Customer() {\n  document.title = \"Customer service\";\n  const [channel, setChannel] = useState(null);\n  useEffect(() => {\n    const username = \"customer\";\n\n    async function getToken() {\n      try {\n        const response = await axios.post(\"http://localhost:7000/join\", {\n          username\n        });\n        console.log(response.data.token);\n        const token = response.data.token;\n        chatClient = new StreamChat(response.data.api_key);\n        chatClient.setUser({\n          id: username,\n          name: \"Customer\"\n        }, token);\n        const channel = chatClient.channel(\"messaging\", \"livechat\", {\n          name: \"Customer Inquiry\"\n        });\n        await channel.watch();\n        setChannel(channel);\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n    }\n\n    getToken();\n  }, []);\n\n  if (channel) {\n    const CustomChannelHeader = withChannelContext(class CustomChannelHeader extends React.PureComponent {\n      render() {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"str-chat__header-livestream\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"str-chat__header-livestream-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"str-chat__header-livestream-left--title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }, \"Customer Support Chat\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"str-chat__header-livestream-right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"str-chat__header-livestream-right-button-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        })));\n      }\n\n    });\n\n    async function handleMessage(channelId, message) {\n      let r1 = await axios.put(\"http://localhost:7000/updateDesc\", {\n        message,\n        author: 'Customer'\n      });\n      let r2 = await channel.sendMessage(message);\n      return r2 + r1;\n    }\n\n    return /*#__PURE__*/React.createElement(Chat, {\n      client: chatClient,\n      theme: \"commerce light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Channel, {\n      channel: channel,\n      doSendMessageRequest: handleMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Window, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomChannelHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MessageList, {\n      typingIndicator: TypingIndicator,\n      Message: MessageCommerce,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MessageInput, {\n      Input: MessageInputFlat,\n      focus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default Customer;","map":{"version":3,"sources":["/Users/tararice/github_local/stream-zendesk-lead-transcript/frontend-customer/src/App.js"],"names":["React","useState","useEffect","Chat","Channel","Window","TypingIndicator","MessageList","MessageCommerce","MessageInput","MessageInputFlat","withChannelContext","StreamChat","axios","chatClient","Customer","document","title","channel","setChannel","username","getToken","response","post","console","log","data","token","api_key","setUser","id","name","watch","err","CustomChannelHeader","PureComponent","render","handleMessage","channelId","message","r1","put","author","r2","sendMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Chat,\n  Channel,\n  Window,\n  TypingIndicator,\n  MessageList,\n  MessageCommerce,\n  MessageInput,\n  MessageInputFlat,\n  withChannelContext\n} from \"stream-chat-react\";\nimport { StreamChat } from \"stream-chat\";\nimport axios from \"axios\";\n\nimport \"stream-chat-react/dist/css/index.css\";\n\nlet chatClient;\n\nfunction Customer() {\n  document.title = \"Customer service\";\n  const [channel, setChannel] = useState(null);\n\n  useEffect(() => {\n    const username = \"customer\";\n    async function getToken() {\n      try {\n        const response = await axios.post(\"http://localhost:7000/join\", {\n          username\n        });\n        console.log(response.data.token);\n        const token = response.data.token;\n        chatClient = new StreamChat(response.data.api_key);\n\n        chatClient.setUser(\n          {\n            id: username,\n            name: \"Customer\"\n          },\n          token\n        );\n\n        const channel = chatClient.channel(\"messaging\", \"livechat\", {\n          name: \"Customer Inquiry\"\n        });\n\n        await channel.watch();\n        setChannel(channel);\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n    }\n\n    getToken();\n  }, []);\n\n  if (channel) {\n    const CustomChannelHeader = withChannelContext(\n      class CustomChannelHeader extends React.PureComponent {\n        render() {\n          return (\n            <div className=\"str-chat__header-livestream\">\n              <div className=\"str-chat__header-livestream-left\">\n                <p className=\"str-chat__header-livestream-left--title\">\n                  Customer Support Chat\n                </p>\n              </div>\n              <div className=\"str-chat__header-livestream-right\">\n                <div className=\"str-chat__header-livestream-right-button-wrapper\">\n                </div>\n              </div>\n            </div>\n          );\n        }\n      }\n    );\n    \n    async function handleMessage(channelId, message){\n      let r1 = await axios.put(\"http://localhost:7000/updateDesc\", {\n          message,\n          author:'Customer'\n        });\n      let r2 = await channel.sendMessage(message);\n      return r2 + r1\n    }\n\n    return (\n      <Chat client={chatClient} theme=\"commerce light\">\n        <Channel channel={channel} doSendMessageRequest={handleMessage}>\n          <Window>\n            <CustomChannelHeader />\n            <MessageList\n              typingIndicator={TypingIndicator}\n              Message={MessageCommerce}\n            />\n            <MessageInput Input={MessageInputFlat} focus />\n          </Window>\n        </Channel>\n      </Chat>\n    );\n  }\n\n  return <div></div>;\n}\n\nexport default Customer;"]},"metadata":{},"sourceType":"module"}